name: Build, Push and Deploy
on:
  push:
    branches:
      - main
      - master
  pull_request:

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images
        env:
          BASE_IMAGE_NAME: ${{ github.event.inputs.base_image_name || 'vpn-bot' }}
          TAG: ${{ github.event.inputs.tag || 'latest' }}
          REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'registry.novvs.ru' }}
        run: |
          SERVICES=("bot-service" "user-service" "payment-service" "vpn-service")
          for SERVICE_NAME in "${SERVICES[@]}"; do
            IMAGE_NAME="${BASE_IMAGE_NAME}-${SERVICE_NAME}"
          
            echo "Building image for service $SERVICE_NAME..."
            docker build \
              --build-arg SERVICE_NAME="$SERVICE_NAME" \
              -t "$REGISTRY/$IMAGE_NAME:$TAG" \
              -f "Dockerfile-$SERVICE_NAME" \
              .
          
            echo "Pushing image $REGISTRY/$IMAGE_NAME:$TAG..."
            docker push "$REGISTRY/$IMAGE_NAME:$TAG"
          
            echo "Done for $SERVICE_NAME!"
            echo "----------------------------"
          done

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push  # Зависит от успешного выполнения build-and-push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'  # Только для main/master веток
    steps:
      - name: SSH Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting deployment..."
            cd /path/to/your/project
            docker compose pull
            docker compose up -d --build --force-recreate
            echo "Deployment completed successfully!"